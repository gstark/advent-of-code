def adjacents(x, y)
  return [
           [x + 1, y], # e
           [x - 1, y], # w
           [x + 0.5, y + 0.5], # ne
           [x + 0.5, y - 0.5], # se
           [x - 0.5, y - 0.5], # sw
           [x - 0.5, y + 0.5], # nw
         ]
end

require "set"

# Sample input
black_squares = Set.new([[-2.0, -1.0], [-1.5, -1.5], [-2.0, 0.0], [-0.5, 0.5], [-1.5, -0.5], [1.5, 1.5], [1.0, -1.0], [0.0, 0.0], [2.0, 0.0], [-1.5, 0.5]])

# My puzzle input
black_squares = Set.new([[-6.0, -5.0], [-1.0, -2.0], [-4.5, -3.5], [-5.0, -2.0], [3.5, -0.5], [-3.5, 3.5], [-1.5, -4.5], [-4.0, 5.0], [-6.0, 4.0], [8.0, 3.0], [-5.5, 5.5], [9.5, 1.5], [6.5, 4.5], [7.5, -3.5], [-1.5, -3.5], [0.0, 1.0], [7.0, 4.0], [2.0, 6.0], [1.0, 7.0], [7.5, -1.5], [-5.0, 7.0], [9.5, -1.5], [-3.5, 6.5], [-9.5, 0.5], [-4.0, 4.0], [11.0, -3.0], [2.5, -0.5], [-1.0, 6.0], [2.5, 3.5], [7.0, 0.0], [-3.0, 5.0], [-10.0, -3.0], [8.5, 5.5], [12.5, -0.5], [5.0, -1.0], [-8.5, 2.5], [-8.0, 4.0], [-1.0, -7.0], [-5.5, 6.5], [7.5, 1.5], [6.5, 5.5], [-1.5, -6.5], [-7.0, -7.0], [11.0, 2.0], [-10.5, 2.5], [5.5, 5.5], [11.0, 0.0], [6.5, 3.5], [-13.0, 1.0], [-3.5, -2.5], [-3.0, -5.0], [4.5, -6.5], [1.0, 6.0], [6.0, 1.0], [-8.0, -3.0], [-4.5, -2.5], [-4.0, -4.0], [-11.0, 0.0], [6.5, 0.5], [2.0, -6.0], [7.0, 7.0], [-2.0, 5.0], [3.5, -1.5], [7.0, 6.0], [-10.0, 1.0], [-7.5, -1.5], [8.0, 5.0], [-9.0, -3.0], [11.0, 1.0], [-9.5, 2.5], [-3.0, 1.0], [-3.0, 7.0], [-2.0, -3.0], [-4.0, 7.0], [-12.0, 2.0], [4.0, -5.0], [-4.0, -1.0], [-6.0, -4.0], [-7.0, -2.0], [-11.5, -1.5], [-3.5, -1.5], [6.0, -2.0], [-11.0, -1.0], [5.0, -7.0], [8.5, -1.5], [-7.0, 6.0], [-8.0, -6.0], [5.0, 7.0], [9.5, 4.5], [-9.0, 3.0], [0.5, 5.5], [-7.0, 2.0], [9.5, 0.5], [-6.0, 5.0], [-8.0, -5.0], [-8.5, -5.5], [-7.5, -4.5], [-9.5, -2.5], [5.0, -6.0], [2.0, 7.0], [-1.0, 2.0], [-5.0, -1.0], [-4.0, -7.0], [0.5, -4.5], [-1.5, 2.5], [-11.5, 1.5], [7.0, -2.0], [2.5, 1.5], [-7.5, -3.5], [9.0, -2.0], [5.5, 1.5], [-4.5, 5.5], [5.5, -4.5], [0.0, -1.0], [3.5, 2.5], [6.5, -5.5], [2.0, 0.0], [5.5, 6.5], [9.0, 4.0], [1.5, -1.5], [-9.0, 1.0], [-3.5, 5.5], [-11.0, 1.0], [2.0, 5.0], [-4.0, -6.0], [8.0, 6.0], [11.0, 3.0], [-7.0, 5.0], [1.5, 2.5], [0.0, 6.0], [12.5, 0.5], [-2.5, -0.5], [2.0, 4.0], [13.0, -1.0], [-2.5, -4.5], [10.0, 3.0], [-5.5, -6.5], [-4.5, 1.5], [-2.0, -5.0], [3.0, 7.0], [-3.5, -4.5], [7.5, 6.5], [7.0, -1.0], [1.5, -0.5], [-3.0, 2.0], [-0.5, -1.5], [-6.5, -6.5], [4.5, 5.5], [5.0, 1.0], [4.0, 4.0], [1.0, -2.0], [-6.5, 1.5], [7.5, 2.5], [7.5, -0.5], [-6.0, 3.0], [10.5, 0.5], [-5.5, 3.5], [-5.0, 3.0], [-9.0, 2.0], [-2.0, 4.0], [-8.0, 6.0], [6.0, -7.0], [-6.0, -6.0], [0.5, -1.5], [-2.5, 6.5], [-6.5, 5.5], [1.5, 1.5], [5.0, -4.0], [8.5, 2.5], [2.0, -1.0], [9.0, 3.0], [-1.0, 0.0], [7.5, 3.5], [-6.5, 4.5], [0.0, 4.0], [5.5, -6.5], [-10.0, -1.0], [-7.5, 5.5], [-3.5, -3.5], [0.0, 2.0], [-4.5, 2.5], [-13.0, -1.0], [-10.0, -4.0], [-8.0, -2.0], [8.0, 1.0], [-6.5, -0.5], [-8.0, -1.0], [-3.5, 2.5], [13.0, 1.0], [-7.5, 0.5], [-3.5, -6.5], [-6.0, 0.0], [9.5, -0.5], [-3.5, 0.5], [-9.0, -4.0], [5.5, -2.5], [8.5, 0.5], [-2.0, -7.0], [-5.5, 2.5], [5.0, 2.0], [4.0, 1.0], [11.0, -1.0], [-4.5, 0.5], [-7.0, -1.0], [-4.5, -6.5], [-1.0, -4.0], [11.0, -2.0], [-9.0, -1.0], [-5.5, -0.5], [3.0, -4.0], [7.5, -6.5], [4.0, 6.0], [-4.5, -5.5], [1.5, -3.5], [10.5, 1.5], [4.0, 0.0], [0.5, -6.5], [-2.5, 1.5], [0.0, -2.0], [-3.5, 4.5], [-0.5, 2.5], [8.0, 2.0], [5.5, -5.5], [8.5, 4.5], [1.5, -4.5], [0.0, 5.0], [-5.0, 6.0], [9.0, 5.0], [-7.0, 0.0], [14.0, 0.0], [-10.0, -2.0], [-1.5, -5.5], [6.0, -3.0], [8.0, -3.0], [1.0, 0.0], [-3.0, -7.0], [-5.5, 1.5], [10.5, -1.5], [-0.5, 6.5], [5.0, 4.0], [4.5, -5.5], [4.0, -3.0], [6.5, -2.5], [-0.5, -2.5], [6.0, 6.0], [5.0, 0.0], [-9.0, 4.0], [6.5, -4.5], [7.0, -6.0], [8.5, -5.5], [10.0, -3.0], [10.0, -4.0], [10.0, -1.0], [7.0, 3.0], [1.5, -6.5], [5.5, 0.5], [-1.0, -6.0], [-8.0, 5.0], [-1.5, 5.5], [10.0, 2.0], [2.5, -2.5], [2.0, 1.0], [0.5, -3.5], [-2.5, 3.5], [-7.0, 1.0], [0.0, -7.0], [8.0, 0.0], [8.5, 1.5], [-6.0, -1.0], [-6.0, -7.0], [2.0, -7.0], [3.5, -6.5], [-2.5, -3.5], [3.0, 2.0], [-5.0, -3.0], [9.0, -1.0], [8.5, -3.5], [1.5, 0.5], [-4.5, 4.5], [-6.5, -2.5], [3.0, -2.0], [5.5, 3.5], [1.5, 6.5], [0.5, -2.5], [-4.0, -5.0], [3.5, -5.5], [0.0, -5.0], [-9.0, -2.0], [0.5, -5.5], [9.5, 3.5], [2.5, -3.5], [10.0, -2.0], [3.0, 3.0], [5.5, -0.5], [2.5, 6.5], [10.0, 4.0], [7.0, -4.0], [-11.5, -0.5], [-3.5, 1.5], [-3.0, 0.0], [7.5, 0.5], [-6.5, -1.5], [-4.0, 0.0], [0.0, -6.0], [3.0, 5.0], [-8.5, 1.5], [2.5, 4.5]])

100.times do
  tiles_to_consider = Set.new(black_squares)
  black_squares.each do |x, y|
    tiles_to_consider.merge(adjacents(x, y))
  end

  new_black_squares = Set.new

  tiles_to_consider.each do |x, y|
    count_black = adjacents(x, y).count { |ax, ay| black_squares.include?([ax, ay]) }

    # This is slower, likely due to building a new set
    # count_black = black_squares.intersection(adjacents(x, y)).size

    new_black_squares << [x, y] if count_black == 1 && black_squares.include?([x, y])
    new_black_squares << [x, y] if count_black == 2
  end

  black_squares = new_black_squares
end

p black_squares.size
